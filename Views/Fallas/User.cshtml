@{
    ViewData["Title"] = "Problemas de usuarios";
}

<div class="container my-4">
    <h1 class="mb-3">Reporte de Fallo en Línea</h1>
    <p>
        Bienvenido(a) a Raccoon Mobile y Asociados, la empresa de telefonía más confiable de México.
        Sabemos lo importante que es mantenerte conectado(a), por eso ofrecemos atención rápida y seguimiento en tiempo
        real para resolver cualquier inconveniente que puedas tener con tu línea.
        A continuación, detectaremos automáticamente tu ubicación para asistirte mejor. Después, podrás describir el
        problema que estás experimentando y lo notificaremos de inmediato.
    </p>

    <div class="alert alert-info" id="location-status">Detectando ubicación...</div>

    <h3>Selecciona tu ubicación</h3>

    <!-- Div para el mapa de Leaflet -->
    <div id="map" style="width: 100%; height: 500px;"></div>

    <!-- Botón para volver a la ubicación original -->
    <button id="resetLocation" class="btn btn-secondary" style="margin-top: 10px; margin-bottom: 10px;">Volver a mi ubicación</button>

    <!-- Campo para la descripción del fallo -->
    <div class="mb-3" style="margin-top: 20px;">
        <label for="issueDescription" class="form-label">Describe el problema que estás experimentando:</label>
        <textarea class="form-control" id="issueDescription" rows="3"></textarea>
    </div>

    <!-- Botón para enviar la notificación -->
    <button id="sendNotification" class="btn btn-primary">Enviar Notificación</button>

    <!-- Mensaje de éxito o error -->
    <div class="mt-3" id="responseMessage"></div>
</div>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

<script>
    let originalLocation = {};
    let userLocation = {};
    let map, marker;

    // Función para detectar la ubicación geográfica
    function detectUserLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition((position) => {
                userLocation = {
                    latitude: position.coords.latitude,
                    longitude: position.coords.longitude
                };

                // Guardar la ubicación original
                originalLocation = { ...userLocation };

                document.getElementById('location-status').textContent =
                    `Ubicación detectada: Latitud ${userLocation.latitude}, Longitud ${userLocation.longitude}`;

                // Inicializar el mapa de Leaflet
                map = L.map('map').setView([userLocation.latitude, userLocation.longitude], 13);

                // Cargar la capa de mapas de OpenStreetMap
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 19,
                    attribution: '© OpenStreetMap'
                }).addTo(map);

                // Agregar un marcador en la ubicación del usuario
                marker = L.marker([userLocation.latitude, userLocation.longitude]).addTo(map)
                    .bindPopup('Estás aquí')
                    .openPopup();

                // Configurar el evento de clic en el mapa
                map.on('click', onMapClick);
            }, (error) => {
                document.getElementById('location-status').textContent =
                    "No se pudo detectar la ubicación. Por favor, activa la geolocalización en tu navegador.";
            });
        } else {
            document.getElementById('location-status').textContent =
                "La geolocalización no es soportada por este navegador.";
        }
    }

    // Función para manejar el clic en el mapa
    function onMapClick(e) {
        userLocation.latitude = e.latlng.lat;
        userLocation.longitude = e.latlng.lng;

        // Actualizar el marcador en la nueva ubicación
        if (marker) {
            marker.setLatLng(e.latlng)
                .bindPopup('Nueva ubicación')  // Cambiar el mensaje aquí
                .openPopup();
        } else {
            marker = L.marker(e.latlng).addTo(map)
                .bindPopup('Nueva ubicación')  // Cambiar el mensaje aquí
                .openPopup();
        }

        document.getElementById('location-status').textContent =
            `Ubicación seleccionada: Latitud ${userLocation.latitude.toFixed(4)}, Longitud ${userLocation.longitude.toFixed(4)}`;
    }

    // Función para volver a la ubicación original
    document.getElementById('resetLocation').addEventListener('click', () => {
        if (marker) {
            // Mover el marcador a la ubicación original
            marker.setLatLng([originalLocation.latitude, originalLocation.longitude])
                .bindPopup('Estás aquí')
                .openPopup();
        }

        // Mover el mapa a la ubicación original
        map.setView([originalLocation.latitude, originalLocation.longitude], 13);

        document.getElementById('location-status').textContent =
            `Ubicación detectada: Latitud ${originalLocation.latitude}, Longitud ${originalLocation.longitude}`;
    });

    // Llamar a la función de detección de ubicación
    detectUserLocation();
</script>
